{
  "name": "cycle-monorepo-sandbox-most-run",
  "version": "3.0.1",
  "description": "Cycle.js Diversity run() for most.js",
  "main": "lib/index.js",
  "typings": "lib/index.d.ts",
  "contributors": [
    {
      "name": "Andre Staltz",
      "email": "andre@staltz.com"
    },
    {
      "name": "Tylor Steinberger",
      "email": "tlsteinberger167@gmail.com"
    }
  ],
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    },
    "ghooks": {
      "commit-msg": "node ./node_modules/.bin/validate-commit-msg"
    }
  },
  "repository": "https://github.com/cyclejs/cyclejs/tree/master/packages/most-run",
  "keywords": [
    "Cycle",
    "Cycle.js",
    "Most",
    "Most.js"
  ],
  "license": "MIT",
  "bugs": "https://github.com/cyclejs/cyclejs/issues",
  "homepage": "https://cycle.js.org",
  "dependencies": {
    "@cycle/base": "^4.0.1",
    "@cycle/most-adapter": "^3.0.0",
    "most": "^0.19.7",
    "most-subject": "^4.1.1"
  },
  "devDependencies": {
    "babel-plugin-espower": "^2.1.2",
    "creed": "^1.0.1"
  },
  "scripts": {
    "lint": "../node_modules/.bin/tslint -c tslint.json src/*.ts src/**/*.ts",
    "mocha": "../node_modules/.bin/mocha -r babel-register test/index.js",
    "test": "npm run lib && npm run lint && npm run mocha",
    "test-ci": "npm run test",
    "browserify": "../node_modules/.bin/browserify lib/index.js -t babelify --outfile dist/cycle-most-run.js",
    "uglify": "../node_modules/.bin/uglifyjs dist/cycle-most-run.js -o dist/cycle-most-run.min.js",
    "predist": "rm -rf dist/ && mkdir -p dist",
    "dist": "npm run lib && npm run browserify && npm run uglify",
    "lib": "rm -rf lib/ && mkdir -p lib/ && ../node_modules/.bin/typings install && tsc",
    "docs": "node ./scripts/make-api-docs.js",
    "prerelease": " npm run dist && npm run docs",
    "release-patch": "npm run prerelease && npm version patch -m \"chore(release): release new version\" && npm run changelog",
    "release-minor": "npm run prerelease && npm version minor -m \"chore(release): release new version\" && npm run changelog",
    "release-major": "npm run prerelease && npm version major -m \"chore(release): release new version\" && npm run changelog"
  }
}