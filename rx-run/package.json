{
  "name": "@cycle/core",
  "version": "7.0.0-rc1",
  "author": "Andre Staltz",
  "description": "The Cycle run() function meant to be used with RxJS v4",
  "license": "MIT",
  "homepage": "https://cyclejs.github.io",
  "bugs": "https://github.com/cyclejs/cycle-core/issues",
  "repository": {
    "type": "git",
    "url": "https://github.com/cyclejs/cycle-core"
  },
  "keywords": [
    "reactive",
    "framework",
    "rxjs",
    "rx",
    "unidirectional",
    "mvi",
    "virtual-dom"
  ],
  "main": "lib/cycle.js",
  "dependencies": {
    "@cycle/base": "^1.2.1",
    "@cycle/rx-adapter": "^1.0.1"
  },
  "peerDependencies": {
    "rx": "*"
  },
  "devDependencies": {
    "babel-preset-es2015": "^6.3.13",
    "babel-register": "^6.4.3",
    "babelify": "^7.2.0",
    "browserify": "12.0.1",
    "browserify-shim": "3.8.11",
    "eslint": "1.0.0",
    "eslint-config-cycle": "3.0.0",
    "eslint-plugin-cycle": "1.0.1",
    "eslint-plugin-no-class": "0.1.0",
    "markdox": "0.1.10",
    "mocha": "2.3.3",
    "rx": "4.0.6",
    "sinon": "1.17.2",
    "testem": "0.9.11",
    "tslint": "^3.3.0",
    "typescript": "^1.7.5",
    "typings": "^0.6.3",
    "uglify-js": "2.5.0"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "browserify-shim": {
    "rx": "global:Rx"
  },
  "scripts": {
    "lint": "tslint -c tslint.json src/*.ts",
    "premocha": "npm run lib",
    "mocha": "mocha --compilers js:babel-register test",
    "test": "npm run lint && npm run mocha",
    "test-browser": "testem",
    "pretest-browser": "browserify test/cycle.js -t babelify -o test/browser/tests-bundle.js",
    "posttest-browser": "rm test/browser/tests-bundle.js",
    "predist": "rm -rf dist/ && mkdirp dist/ && npm run lib",
    "postdist": "uglifyjs dist/cycle.js -o dist/cycle.min.js",
    "dist": "browserify lib/index.js -t babelify -t browserify-shim --standalone Cycle --exclude rx -o dist/cycle.js",
    "docs": "node ./scripts/make-api-docs.js",
    "prelib": "rm -rf lib/ && mkdirp lib",
    "lib": "tsc",
    "prepublish": "npm run lib",
    "preversion": "npm run dist && git add dist/ && git diff --quiet --exit-code --cached || git commit -a -m 'chore(dist): build dist/'",
    "version-patch": "npm version patch --message 'chore(version): %s'",
    "version-minor": "npm version minor --message 'chore(version): %s'",
    "version-major": "npm version major --message 'chore(version): %s'",
    "postversion": "npm publish --access=public"
  }
}
